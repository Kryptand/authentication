/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface InputWithIcon {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KryptandCenteredCard {
    }
    interface KryptandExternalLoginButton {
    }
    interface KryptandExternalLogins {
    }
    interface KryptandIntroductionCard {
    }
    interface KryptandProductIcon {
        "theme": 'dark' | 'light';
    }
    interface NavBackButton {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PopoverMenu {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PreviewUploadImage {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface TextButton {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLInputWithIconElement extends Components.InputWithIcon, HTMLStencilElement {
    }
    var HTMLInputWithIconElement: {
        prototype: HTMLInputWithIconElement;
        new (): HTMLInputWithIconElement;
    };
    interface HTMLKryptandCenteredCardElement extends Components.KryptandCenteredCard, HTMLStencilElement {
    }
    var HTMLKryptandCenteredCardElement: {
        prototype: HTMLKryptandCenteredCardElement;
        new (): HTMLKryptandCenteredCardElement;
    };
    interface HTMLKryptandExternalLoginButtonElement extends Components.KryptandExternalLoginButton, HTMLStencilElement {
    }
    var HTMLKryptandExternalLoginButtonElement: {
        prototype: HTMLKryptandExternalLoginButtonElement;
        new (): HTMLKryptandExternalLoginButtonElement;
    };
    interface HTMLKryptandExternalLoginsElement extends Components.KryptandExternalLogins, HTMLStencilElement {
    }
    var HTMLKryptandExternalLoginsElement: {
        prototype: HTMLKryptandExternalLoginsElement;
        new (): HTMLKryptandExternalLoginsElement;
    };
    interface HTMLKryptandIntroductionCardElement extends Components.KryptandIntroductionCard, HTMLStencilElement {
    }
    var HTMLKryptandIntroductionCardElement: {
        prototype: HTMLKryptandIntroductionCardElement;
        new (): HTMLKryptandIntroductionCardElement;
    };
    interface HTMLKryptandProductIconElement extends Components.KryptandProductIcon, HTMLStencilElement {
    }
    var HTMLKryptandProductIconElement: {
        prototype: HTMLKryptandProductIconElement;
        new (): HTMLKryptandProductIconElement;
    };
    interface HTMLNavBackButtonElement extends Components.NavBackButton, HTMLStencilElement {
    }
    var HTMLNavBackButtonElement: {
        prototype: HTMLNavBackButtonElement;
        new (): HTMLNavBackButtonElement;
    };
    interface HTMLPopoverMenuElement extends Components.PopoverMenu, HTMLStencilElement {
    }
    var HTMLPopoverMenuElement: {
        prototype: HTMLPopoverMenuElement;
        new (): HTMLPopoverMenuElement;
    };
    interface HTMLPreviewUploadImageElement extends Components.PreviewUploadImage, HTMLStencilElement {
    }
    var HTMLPreviewUploadImageElement: {
        prototype: HTMLPreviewUploadImageElement;
        new (): HTMLPreviewUploadImageElement;
    };
    interface HTMLTextButtonElement extends Components.TextButton, HTMLStencilElement {
    }
    var HTMLTextButtonElement: {
        prototype: HTMLTextButtonElement;
        new (): HTMLTextButtonElement;
    };
    interface HTMLElementTagNameMap {
        "input-with-icon": HTMLInputWithIconElement;
        "kryptand-centered-card": HTMLKryptandCenteredCardElement;
        "kryptand-external-login-button": HTMLKryptandExternalLoginButtonElement;
        "kryptand-external-logins": HTMLKryptandExternalLoginsElement;
        "kryptand-introduction-card": HTMLKryptandIntroductionCardElement;
        "kryptand-product-icon": HTMLKryptandProductIconElement;
        "nav-back-button": HTMLNavBackButtonElement;
        "popover-menu": HTMLPopoverMenuElement;
        "preview-upload-image": HTMLPreviewUploadImageElement;
        "text-button": HTMLTextButtonElement;
    }
}
declare namespace LocalJSX {
    interface InputWithIcon {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KryptandCenteredCard {
    }
    interface KryptandExternalLoginButton {
    }
    interface KryptandExternalLogins {
        "onFacebookButtonClicked"?: (event: CustomEvent<any>) => void;
        "onGithubButtonClicked"?: (event: CustomEvent<any>) => void;
        "onGoogleButtonClicked"?: (event: CustomEvent<any>) => void;
        "onTwitterButtonClicked"?: (event: CustomEvent<any>) => void;
    }
    interface KryptandIntroductionCard {
    }
    interface KryptandProductIcon {
        "theme"?: 'dark' | 'light';
    }
    interface NavBackButton {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PopoverMenu {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PreviewUploadImage {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface TextButton {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "input-with-icon": InputWithIcon;
        "kryptand-centered-card": KryptandCenteredCard;
        "kryptand-external-login-button": KryptandExternalLoginButton;
        "kryptand-external-logins": KryptandExternalLogins;
        "kryptand-introduction-card": KryptandIntroductionCard;
        "kryptand-product-icon": KryptandProductIcon;
        "nav-back-button": NavBackButton;
        "popover-menu": PopoverMenu;
        "preview-upload-image": PreviewUploadImage;
        "text-button": TextButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "input-with-icon": LocalJSX.InputWithIcon & JSXBase.HTMLAttributes<HTMLInputWithIconElement>;
            "kryptand-centered-card": LocalJSX.KryptandCenteredCard & JSXBase.HTMLAttributes<HTMLKryptandCenteredCardElement>;
            "kryptand-external-login-button": LocalJSX.KryptandExternalLoginButton & JSXBase.HTMLAttributes<HTMLKryptandExternalLoginButtonElement>;
            "kryptand-external-logins": LocalJSX.KryptandExternalLogins & JSXBase.HTMLAttributes<HTMLKryptandExternalLoginsElement>;
            "kryptand-introduction-card": LocalJSX.KryptandIntroductionCard & JSXBase.HTMLAttributes<HTMLKryptandIntroductionCardElement>;
            "kryptand-product-icon": LocalJSX.KryptandProductIcon & JSXBase.HTMLAttributes<HTMLKryptandProductIconElement>;
            "nav-back-button": LocalJSX.NavBackButton & JSXBase.HTMLAttributes<HTMLNavBackButtonElement>;
            "popover-menu": LocalJSX.PopoverMenu & JSXBase.HTMLAttributes<HTMLPopoverMenuElement>;
            "preview-upload-image": LocalJSX.PreviewUploadImage & JSXBase.HTMLAttributes<HTMLPreviewUploadImageElement>;
            "text-button": LocalJSX.TextButton & JSXBase.HTMLAttributes<HTMLTextButtonElement>;
        }
    }
}
